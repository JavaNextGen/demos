<?xml version="1.0" encoding="UTF-8"?>

<!-- The applicationContext.xml holds the configurations for how we register, create, and inject Spring Beans -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">
    
<!-- We need the <beans> tag and its configurations in order for this xml to be used for Spring -->


	<!-- This is the only thing we need in our applicationContext.xml when using annotation-driven bean declaration -->
  	<context:component-scan base-package="com.revature"></context:component-scan>
  	<!-- With this one line, the applicationContext.xml knows to scan com.revature for annotations -->
  

	<!-- Below, we are declaring and wiring beans in XML (which we usually don't do - we like @Autowired) -->
	
	<!-- Account Bean -->
	
	<!-- <bean name="account" class="com.revature.models.Account"></bean> -->
	
	<!-- User Bean -->
	
	<!-- <bean name="user" class="com.revature.models.User"> -->
	
	<!-- The User Class has an Account as one of its fields. So we need to WIRE the account with the property tag-->
		<!-- <property name="account" ref="account"></property> -->
		<!-- name is the name of the field in the User Class,  ref is the name of the Bean in our XML-->
	 <!--</bean> -->

</beans>